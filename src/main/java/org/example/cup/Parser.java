
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package org.example.cup;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\100\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\003\005\000\002\005\004\000\002\005\002" +
    "\000\002\004\004\000\002\004\004\000\002\004\004\000" +
    "\002\006\003\000\002\006\003\000\002\007\003\000\002" +
    "\007\003\000\002\007\003\000\002\010\003\000\002\010" +
    "\003\000\002\010\003\000\002\011\015\000\002\012\011" +
    "\000\002\013\020\000\002\015\011\000\002\014\012\000" +
    "\002\016\016\000\002\020\012\000\002\017\016\000\002" +
    "\021\012\000\002\022\012\000\002\023\012\000\002\024" +
    "\012\000\002\025\012\000\002\031\012\000\002\026\012" +
    "\000\002\027\003\000\002\035\012\000\002\030\003\000" +
    "\002\032\006\000\002\037\012\000\002\040\012\000\002" +
    "\033\004\000\002\033\002\000\002\051\004\000\002\051" +
    "\004\000\002\051\004\000\002\051\004\000\002\051\004" +
    "\000\002\051\004\000\002\051\004\000\002\051\004\000" +
    "\002\047\003\000\002\047\003\000\002\047\003\000\002" +
    "\047\003\000\002\047\003\000\002\036\011\000\002\041" +
    "\011\000\002\042\011\000\002\043\011\000\002\044\011" +
    "\000\002\045\011\000\002\050\011\000\002\046\011\000" +
    "\002\052\006\000\002\053\006\000\002\054\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u010f\000\006\054\004\056\010\001\002\000\006\055" +
    "\ufffc\056\010\001\002\000\004\002\u010d\001\002\000\004" +
    "\002\000\001\002\000\022\004\036\012\023\013\024\017" +
    "\015\020\034\021\017\024\027\025\033\001\002\000\004" +
    "\030\012\001\002\000\004\002\uffff\001\002\000\004\031" +
    "\013\001\002\000\004\035\014\001\002\000\022\004\uffc4" +
    "\012\uffc4\013\uffc4\017\uffc4\020\uffc4\021\uffc4\024\uffc4\025" +
    "\uffc4\001\002\000\004\035\u0106\001\002\000\010\002\ufff1" +
    "\055\ufff1\056\ufff1\001\002\000\004\035\366\001\002\000" +
    "\010\002\ufffa\055\ufffa\056\ufffa\001\002\000\010\002\ufff8" +
    "\055\ufff8\056\ufff8\001\002\000\010\002\ufff7\055\ufff7\056" +
    "\ufff7\001\002\000\004\035\360\001\002\000\004\035\312" +
    "\001\002\000\010\002\ufff9\055\ufff9\056\ufff9\001\002\000" +
    "\010\002\ufff3\055\ufff3\056\ufff3\001\002\000\004\035\153" +
    "\001\002\000\010\002\ufff2\055\ufff2\056\ufff2\001\002\000" +
    "\010\002\ufff6\055\ufff6\056\ufff6\001\002\000\010\002\ufff5" +
    "\055\ufff5\056\ufff5\001\002\000\004\035\134\001\002\000" +
    "\004\035\126\001\002\000\010\002\ufff4\055\ufff4\056\ufff4" +
    "\001\002\000\004\035\040\001\002\000\010\002\ufffb\055" +
    "\ufffb\056\ufffb\001\002\000\004\033\041\001\002\000\004" +
    "\064\042\001\002\000\004\060\044\001\002\000\004\005" +
    "\117\001\002\000\004\030\114\001\002\000\004\060\044" +
    "\001\002\000\004\060\044\001\002\000\004\006\050\001" +
    "\002\000\004\035\051\001\002\000\004\033\052\001\002" +
    "\000\004\036\053\001\002\000\004\071\054\001\002\000" +
    "\004\037\055\001\002\000\004\061\056\001\002\000\004" +
    "\060\uffe7\001\002\000\004\060\044\001\002\000\004\007" +
    "\061\001\002\000\004\035\062\001\002\000\004\033\063" +
    "\001\002\000\004\036\064\001\002\000\004\071\065\001" +
    "\002\000\004\037\066\001\002\000\004\061\067\001\002" +
    "\000\004\060\uffe6\001\002\000\004\010\105\001\002\000" +
    "\004\060\044\001\002\000\004\065\103\001\002\000\004" +
    "\011\074\001\002\000\004\035\075\001\002\000\004\033" +
    "\076\001\002\000\004\036\077\001\002\000\004\071\100" +
    "\001\002\000\004\037\101\001\002\000\004\061\102\001" +
    "\002\000\004\065\uffe4\001\002\000\004\057\104\001\002" +
    "\000\010\002\ufff0\055\ufff0\056\ufff0\001\002\000\004\035" +
    "\106\001\002\000\004\033\107\001\002\000\004\036\110" +
    "\001\002\000\004\071\111\001\002\000\004\037\112\001" +
    "\002\000\004\061\113\001\002\000\004\060\uffe5\001\002" +
    "\000\004\031\115\001\002\000\004\035\116\001\002\000" +
    "\026\005\uffc3\006\uffc3\007\uffc3\010\uffc3\011\uffc3\014\uffc3" +
    "\015\uffc3\016\uffc3\022\uffc3\023\uffc3\001\002\000\004\035" +
    "\120\001\002\000\004\033\121\001\002\000\004\036\122" +
    "\001\002\000\004\071\123\001\002\000\004\037\124\001" +
    "\002\000\004\061\125\001\002\000\006\060\uffe8\065\uffe8" +
    "\001\002\000\004\033\127\001\002\000\004\064\130\001" +
    "\002\000\004\060\044\001\002\000\004\065\132\001\002" +
    "\000\004\057\133\001\002\000\010\002\uffed\055\uffed\056" +
    "\uffed\001\002\000\004\033\135\001\002\000\004\064\136" +
    "\001\002\000\004\060\044\001\002\000\004\060\044\001" +
    "\002\000\004\022\144\001\002\000\004\065\142\001\002" +
    "\000\004\057\143\001\002\000\010\002\uffea\055\uffea\056" +
    "\uffea\001\002\000\004\035\145\001\002\000\004\033\146" +
    "\001\002\000\004\036\147\001\002\000\004\071\150\001" +
    "\002\000\004\037\151\001\002\000\004\061\152\001\002" +
    "\000\006\060\uffdd\065\uffdd\001\002\000\004\033\154\001" +
    "\002\000\004\064\155\001\002\000\004\060\044\001\002" +
    "\000\004\060\044\001\002\000\004\060\044\001\002\000" +
    "\004\023\276\001\002\000\004\065\162\001\002\000\004" +
    "\066\163\001\002\000\006\062\166\067\uffda\001\002\000" +
    "\022\016\204\045\200\046\211\047\176\050\201\051\205" +
    "\052\177\053\213\001\002\000\004\067\174\001\002\000" +
    "\004\030\171\001\002\000\006\062\166\067\uffda\001\002" +
    "\000\004\067\uffdb\001\002\000\004\031\172\001\002\000" +
    "\004\035\173\001\002\000\022\016\uffc2\045\uffc2\046\uffc2" +
    "\047\uffc2\050\uffc2\051\uffc2\052\uffc2\053\uffc2\001\002\000" +
    "\004\057\175\001\002\000\010\002\uffeb\055\uffeb\056\uffeb" +
    "\001\002\000\004\035\270\001\002\000\004\035\262\001" +
    "\002\000\004\035\254\001\002\000\004\035\246\001\002" +
    "\000\006\062\uffd3\067\uffd3\001\002\000\006\062\uffd6\067" +
    "\uffd6\001\002\000\004\035\240\001\002\000\004\035\232" +
    "\001\002\000\006\062\uffd2\067\uffd2\001\002\000\006\062" +
    "\uffd5\067\uffd5\001\002\000\006\062\uffd7\067\uffd7\001\002" +
    "\000\004\035\224\001\002\000\006\062\uffd4\067\uffd4\001" +
    "\002\000\004\035\216\001\002\000\006\062\uffd8\067\uffd8" +
    "\001\002\000\006\062\uffd9\067\uffd9\001\002\000\004\033" +
    "\217\001\002\000\004\036\220\001\002\000\004\071\221" +
    "\001\002\000\004\037\222\001\002\000\004\063\223\001" +
    "\002\000\006\062\uffc5\067\uffc5\001\002\000\004\033\225" +
    "\001\002\000\004\036\226\001\002\000\004\071\227\001" +
    "\002\000\004\037\230\001\002\000\004\063\231\001\002" +
    "\000\006\062\uffcb\067\uffcb\001\002\000\004\033\233\001" +
    "\002\000\004\036\234\001\002\000\004\071\235\001\002" +
    "\000\004\037\236\001\002\000\004\063\237\001\002\000" +
    "\006\062\uffc8\067\uffc8\001\002\000\004\033\241\001\002" +
    "\000\004\036\242\001\002\000\004\071\243\001\002\000" +
    "\004\037\244\001\002\000\004\063\245\001\002\000\006" +
    "\062\uffc6\067\uffc6\001\002\000\004\033\247\001\002\000" +
    "\004\036\250\001\002\000\004\071\251\001\002\000\004" +
    "\037\252\001\002\000\004\063\253\001\002\000\006\062" +
    "\uffc9\067\uffc9\001\002\000\004\033\255\001\002\000\004" +
    "\036\256\001\002\000\004\071\257\001\002\000\004\037" +
    "\260\001\002\000\004\063\261\001\002\000\006\062\uffcc" +
    "\067\uffcc\001\002\000\004\033\263\001\002\000\004\036" +
    "\264\001\002\000\004\071\265\001\002\000\004\037\266" +
    "\001\002\000\004\063\267\001\002\000\006\062\uffc7\067" +
    "\uffc7\001\002\000\004\033\271\001\002\000\004\036\272" +
    "\001\002\000\004\070\273\001\002\000\004\037\274\001" +
    "\002\000\004\063\275\001\002\000\006\062\uffca\067\uffca" +
    "\001\002\000\004\035\277\001\002\000\004\033\300\001" +
    "\002\000\004\036\301\001\002\000\014\014\302\041\306" +
    "\042\304\043\305\044\303\001\002\000\004\037\uffd1\001" +
    "\002\000\004\037\uffcd\001\002\000\004\037\uffcf\001\002" +
    "\000\004\037\uffce\001\002\000\004\037\uffd0\001\002\000" +
    "\004\037\310\001\002\000\004\061\311\001\002\000\006" +
    "\032\uffdc\065\uffdc\001\002\000\004\033\313\001\002\000" +
    "\004\064\314\001\002\000\004\060\044\001\002\000\004" +
    "\060\044\001\002\000\004\014\351\001\002\000\004\060" +
    "\044\001\002\000\004\060\044\001\002\000\004\015\322" +
    "\001\002\000\004\035\323\001\002\000\004\033\324\001" +
    "\002\000\004\036\325\001\002\000\004\071\326\001\002" +
    "\000\004\037\327\001\002\000\004\061\330\001\002\000" +
    "\004\060\uffe2\001\002\000\004\016\342\001\002\000\004" +
    "\060\044\001\002\000\004\060\uffe1\001\002\000\004\060" +
    "\044\001\002\000\004\060\044\001\002\000\004\060\044" +
    "\001\002\000\004\065\340\001\002\000\004\057\341\001" +
    "\002\000\010\002\uffee\055\uffee\056\uffee\001\002\000\004" +
    "\035\343\001\002\000\004\033\344\001\002\000\004\036" +
    "\345\001\002\000\004\071\346\001\002\000\004\037\347" +
    "\001\002\000\004\061\350\001\002\000\004\060\uffe0\001" +
    "\002\000\004\035\352\001\002\000\004\033\353\001\002" +
    "\000\004\036\354\001\002\000\004\071\355\001\002\000" +
    "\004\037\356\001\002\000\004\061\357\001\002\000\006" +
    "\060\uffe3\065\uffe3\001\002\000\004\033\361\001\002\000" +
    "\004\064\362\001\002\000\004\060\044\001\002\000\004" +
    "\065\364\001\002\000\004\057\365\001\002\000\010\002" +
    "\uffef\055\uffef\056\uffef\001\002\000\004\033\367\001\002" +
    "\000\004\064\371\001\002\000\004\060\044\001\002\000" +
    "\004\060\uffdf\001\002\000\004\060\044\001\002\000\004" +
    "\060\044\001\002\000\004\032\376\001\002\000\004\066" +
    "\u0102\001\002\000\004\034\377\001\002\000\004\027\u0100" +
    "\001\002\000\004\033\u0101\001\002\000\004\066\uffde\001" +
    "\002\000\006\062\166\067\uffda\001\002\000\004\067\u0104" +
    "\001\002\000\004\057\u0105\001\002\000\010\002\uffe9\055" +
    "\uffe9\056\uffe9\001\002\000\004\033\u0107\001\002\000\004" +
    "\064\u0108\001\002\000\004\060\044\001\002\000\004\060" +
    "\044\001\002\000\004\065\u010b\001\002\000\004\057\u010c" +
    "\001\002\000\010\002\uffec\055\uffec\056\uffec\001\002\000" +
    "\004\002\001\001\002\000\006\055\ufffc\056\010\001\002" +
    "\000\004\055\u0110\001\002\000\004\002\ufffe\001\002\000" +
    "\004\055\ufffd\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u010f\000\012\002\004\003\010\004\005\052\006\001" +
    "\001\000\010\004\u010d\005\u010e\052\006\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\006\036\007\017\010" +
    "\024\011\020\012\021\013\030\014\031\015\034\016\025" +
    "\017\027\020\015\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\021\044\053\042\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\022\045" +
    "\053\046\001\001\000\006\023\056\053\057\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\024\070\053\067\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\025" +
    "\071\053\072\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\021\130\053" +
    "\042\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\021" +
    "\136\053\042\001\001\000\006\037\140\053\137\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\021\155\053\042\001\001\000\006\037\156\053" +
    "\137\001\001\000\006\040\160\053\157\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\033" +
    "\164\051\166\054\163\001\001\000\022\036\214\041\213" +
    "\042\207\043\202\044\206\045\211\046\205\050\201\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\033\167" +
    "\051\166\054\163\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\047\306\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\021\314\053\042\001" +
    "\001\000\006\031\316\053\315\001\001\000\002\001\001" +
    "\000\006\026\317\053\320\001\001\000\010\027\331\035" +
    "\332\053\330\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\022\333\053\046\001\001\000\002\001" +
    "\001\000\006\023\334\053\057\001\001\000\006\024\335" +
    "\053\067\001\001\000\006\025\336\053\072\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\021" +
    "\362\053\042\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\030\367\001" +
    "\001\000\006\021\371\053\042\001\001\000\002\001\001" +
    "\000\006\037\372\053\137\001\001\000\006\040\373\053" +
    "\157\001\001\000\004\032\374\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\033\u0102\051\166\054\163\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\021\u0108\053\042" +
    "\001\001\000\006\031\u0109\053\315\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\004\u010d\005\u0110\052\006\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public void syntax_error(Symbol cur_token) {
            System.out.println("Simbolo con error:" + symbl_name_from_id(cur_token.sym));
            System.out.println("Linea " + cur_token.left);
            System.out.println("Columna " + cur_token.right);
            if (expected_token_ids().isEmpty()) {
                System.out.println("ya no se esperaba ningun simbolo");
            }
        }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser$actions {
  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action_part00000000(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= onset EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // onset ::= actionSingle 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("onset",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // onset ::= actions 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("onset",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // actions ::= INITACCIONES reaction ENDACCIONES 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("actions",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // reaction ::= actionSingle reaction 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("reaction",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // reaction ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("reaction",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // actionSingle ::= initAcction siteWeb 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("actionSingle",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // actionSingle ::= initAcction page 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("actionSingle",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // actionSingle ::= initAcction component 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("actionSingle",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // siteWeb ::= addNewSite 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("siteWeb",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // siteWeb ::= deleteSite 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("siteWeb",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // page ::= newPage 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("page",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // page ::= modifyPage 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("page",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // page ::= deletePage 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("page",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // component ::= addComponent 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("component",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // component ::= modifyComponent 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("component",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // component ::= deleteComponent 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("component",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // addNewSite ::= NUEVO_SITIO_WEB COMILLAS MAYORQUE INITPARAMETROS id userCreator creationDate modificationDate modificationUser ENDPARAMETROS ENDACCION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("addNewSite",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-10)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // deleteSite ::= BORRAR_SITIO_WEB COMILLAS MAYORQUE INITPARAMETROS id ENDPARAMETROS ENDACCION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("deleteSite",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // newPage ::= NUEVA_PAGINA COMILLAS MAYORQUE INITPARAMETROS id title site prePrincipal userCreator creationDate modificationDate modificationUser ENDPARAMETROS ENDACCION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("newPage",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-13)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // deletePage ::= BORRAR_PAGINA COMILLAS MAYORQUE INITPARAMETROS id ENDPARAMETROS ENDACCION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("deletePage",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // modifyPage ::= MODIFICAR_PAGINA COMILLAS MAYORQUE INITPARAMETROS id title ENDPARAMETROS ENDACCION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("modifyPage",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // addComponent ::= AGREGAR_COMPONENTE COMILLAS MAYORQUE INITPARAMETROS id pageComponent classComponent ENDPARAMETROS INITATRIBUTOS atribut ENDATRIBUTOS ENDACCION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("addComponent",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // deleteComponent ::= BORRAR_COMPONENTE COMILLAS MAYORQUE INITPARAMETROS id pageComponent ENDPARAMETROS ENDACCION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("deleteComponent",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // modifyComponent ::= MODIFICAR_COMPONENTE COMILLAS MAYORQUE initParameters id pageComponent classComponent endParameters INITATRIBUTOS atribut ENDATRIBUTOS ENDACCION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("modifyComponent",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // id ::= initParametro ID COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("id",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // userCreator ::= initParametro USUARIO_CREACION COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("userCreator",16, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // creationDate ::= initParametro FECHA_CREACION COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("creationDate",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // modificationDate ::= initParametro FECHA_MODIFICACION COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("modificationDate",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // modificationUser ::= initParametro USUARIO_MODIFICACION COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("modificationUser",19, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // title ::= initParametro TITULO COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("title",23, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // site ::= initParametro SITIO COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("site",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // prePrincipal ::= principal 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("prePrincipal",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // principal ::= initParametro PADRE COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("principal",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // initParameters ::= INITPARAMETROS 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initParameters",22, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // endParameters ::= MENORQUE DIAGONAL PARAMETROS MAYORQUE 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("endParameters",24, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // pageComponent ::= initParametro PAGINA COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("pageComponent",29, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // classComponent ::= initParametro CLASE COMILLAS MAYORQUE CORCHETEA atributClass CORCHETEC ENDPARAMETRO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("classComponent",30, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // atribut ::= atributExtend atribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atribut",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // atribut ::= 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atribut",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // atributExtend ::= initAttribut textAttribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // atributExtend ::= initAttribut lineupAttribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // atributExtend ::= initAttribut colorAttribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // atributExtend ::= initAttribut originAttribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // atributExtend ::= initAttribut heightAttribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // atributExtend ::= initAttribut wideAttribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // atributExtend ::= initAttribut principalAttribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // atributExtend ::= initAttribut labelAttribut 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // atributClass ::= TITULO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",37, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // atributClass ::= PARRAFO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",37, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // atributClass ::= IMAGEN 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",37, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // atributClass ::= VIDEO 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",37, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // atributClass ::= MENU 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",37, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // textAttribut ::= TEXTO COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDATRIBUT 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("textAttribut",28, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // lineupAttribut ::= ALINEACION COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDATRIBUT 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("lineupAttribut",31, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // colorAttribut ::= COLOR COMILLAS MAYORQUE CORCHETEA HEXADECIMAL CORCHETEC ENDATRIBUT 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("colorAttribut",32, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // originAttribut ::= ORIGEN COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDATRIBUT 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("originAttribut",33, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // heightAttribut ::= ALTURA COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDATRIBUT 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("heightAttribut",34, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // wideAttribut ::= ANCHO COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDATRIBUT 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("wideAttribut",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // principalAttribut ::= PADRE COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDATRIBUT 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("principalAttribut",38, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // labelAttribut ::= ETIQUETAS COMILLAS MAYORQUE CORCHETEA IDENTIFICADOR CORCHETEC ENDATRIBUT 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("labelAttribut",36, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // initAcction ::= INITACCION NOMBRE IGUAL COMILLAS 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initAcction",40, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // initParametro ::= INITPARAMETRO NOMBRE IGUAL COMILLAS 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initParametro",41, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // initAttribut ::= INITATRIBUT NOMBRE IGUAL COMILLAS 
            {
              String RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initAttribut",42, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
              return CUP$Parser$do_action_part00000000(
                               CUP$Parser$act_num,
                               CUP$Parser$parser,
                               CUP$Parser$stack,
                               CUP$Parser$top);
    }
}

}
