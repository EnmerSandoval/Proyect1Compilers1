
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package org.example.cup;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import org.example.classes.WebSite;
import org.example.classes.Page;
import org.example.classes.ClassPrincipal;
import org.example.classes.components.Component;
import org.example.classes.components.ImageComponent;
import org.example.classes.components.TextComponent;
import org.example.classes.components.VideoComponent;
import java.time.LocalDate;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\101\000\002\002\004\000\002\051\003\000\002\051" +
    "\003\000\002\047\005\000\002\046\004\000\002\046\002" +
    "\000\002\050\004\000\002\050\004\000\002\050\004\000" +
    "\002\034\003\000\002\034\003\000\002\030\003\000\002" +
    "\030\003\000\002\030\003\000\002\037\003\000\002\037" +
    "\003\000\002\037\003\000\002\035\015\000\002\036\011" +
    "\000\002\031\020\000\002\033\011\000\002\032\012\000" +
    "\002\040\016\000\002\042\012\000\002\041\016\000\002" +
    "\021\010\000\002\020\010\000\002\017\010\000\002\016" +
    "\010\000\002\015\010\000\002\014\010\000\002\013\010" +
    "\000\002\022\003\000\002\012\010\000\002\011\010\000" +
    "\002\023\010\000\002\043\003\000\002\044\004\000\002" +
    "\045\003\000\002\045\003\000\002\045\003\000\002\045" +
    "\003\000\002\027\007\000\002\027\005\000\002\027\005" +
    "\000\002\027\003\000\002\026\011\000\002\025\007\000" +
    "\002\052\004\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\010" +
    "\007\000\002\007\007\000\002\006\007\000\002\005\007" +
    "\000\002\004\007\000\002\003\007\000\002\002\007\000" +
    "\002\056\007\000\002\053\006\000\002\054\006\000\002" +
    "\055\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\363\000\006\046\004\050\010\001\002\000\006\047" +
    "\ufffc\050\ufffc\001\002\000\004\002\362\001\002\000\004" +
    "\002\000\001\002\000\022\004\036\012\023\013\024\020" +
    "\015\021\034\022\017\025\027\026\033\001\002\000\004" +
    "\027\012\001\002\000\004\002\uffff\001\002\000\004\030" +
    "\013\001\002\000\004\032\014\001\002\000\022\004\uffc3" +
    "\012\uffc3\013\uffc3\020\uffc3\021\uffc3\022\uffc3\025\uffc3\026" +
    "\uffc3\001\002\000\004\032\353\001\002\000\010\002\ufff1" +
    "\047\ufff1\050\ufff1\001\002\000\004\032\340\001\002\000" +
    "\010\002\ufffa\047\ufffa\050\ufffa\001\002\000\010\002\ufff8" +
    "\047\ufff8\050\ufff8\001\002\000\010\002\ufff7\047\ufff7\050" +
    "\ufff7\001\002\000\004\032\332\001\002\000\004\032\272" +
    "\001\002\000\010\002\ufff9\047\ufff9\050\ufff9\001\002\000" +
    "\010\002\ufff3\047\ufff3\050\ufff3\001\002\000\004\032\137" +
    "\001\002\000\010\002\ufff2\047\ufff2\050\ufff2\001\002\000" +
    "\010\002\ufff6\047\ufff6\050\ufff6\001\002\000\010\002\ufff5" +
    "\047\ufff5\050\ufff5\001\002\000\004\032\122\001\002\000" +
    "\004\032\114\001\002\000\010\002\ufff4\047\ufff4\050\ufff4" +
    "\001\002\000\004\032\040\001\002\000\010\002\ufffb\047" +
    "\ufffb\050\ufffb\001\002\000\004\031\041\001\002\000\004" +
    "\056\042\001\002\000\004\052\044\001\002\000\004\005" +
    "\107\001\002\000\004\027\104\001\002\000\004\052\044" +
    "\001\002\000\004\052\044\001\002\000\004\006\050\001" +
    "\002\000\004\032\051\001\002\000\004\031\052\001\002" +
    "\000\004\062\053\001\002\000\004\053\054\001\002\000" +
    "\004\052\uffe7\001\002\000\004\052\044\001\002\000\004" +
    "\007\057\001\002\000\004\032\060\001\002\000\004\031" +
    "\061\001\002\000\004\062\062\001\002\000\004\053\063" +
    "\001\002\000\004\052\uffe6\001\002\000\004\010\077\001" +
    "\002\000\004\052\044\001\002\000\004\057\075\001\002" +
    "\000\004\011\070\001\002\000\004\032\071\001\002\000" +
    "\004\031\072\001\002\000\004\062\073\001\002\000\004" +
    "\053\074\001\002\000\004\057\uffe4\001\002\000\004\051" +
    "\076\001\002\000\010\002\ufff0\047\ufff0\050\ufff0\001\002" +
    "\000\004\032\100\001\002\000\004\031\101\001\002\000" +
    "\004\062\102\001\002\000\004\053\103\001\002\000\004" +
    "\052\uffe5\001\002\000\004\030\105\001\002\000\004\032" +
    "\106\001\002\000\026\005\uffc2\006\uffc2\007\uffc2\010\uffc2" +
    "\011\uffc2\014\uffc2\016\uffc2\017\uffc2\023\uffc2\024\uffc2\001" +
    "\002\000\004\032\110\001\002\000\004\031\111\001\002" +
    "\000\004\062\112\001\002\000\004\053\113\001\002\000" +
    "\006\052\uffe8\057\uffe8\001\002\000\004\031\115\001\002" +
    "\000\004\056\116\001\002\000\004\052\044\001\002\000" +
    "\004\057\120\001\002\000\004\051\121\001\002\000\010" +
    "\002\uffed\047\uffed\050\uffed\001\002\000\004\031\123\001" +
    "\002\000\004\056\124\001\002\000\004\052\044\001\002" +
    "\000\004\052\044\001\002\000\004\023\132\001\002\000" +
    "\004\057\130\001\002\000\004\051\131\001\002\000\010" +
    "\002\uffea\047\uffea\050\uffea\001\002\000\004\032\133\001" +
    "\002\000\004\031\134\001\002\000\004\062\135\001\002" +
    "\000\004\053\136\001\002\000\006\052\uffdf\057\uffdf\001" +
    "\002\000\004\031\140\001\002\000\004\056\141\001\002" +
    "\000\004\052\044\001\002\000\004\052\044\001\002\000" +
    "\004\052\044\001\002\000\004\024\260\001\002\000\004" +
    "\057\146\001\002\000\004\060\147\001\002\000\004\054" +
    "\152\001\002\000\010\017\170\037\164\042\163\001\002" +
    "\000\004\061\157\001\002\000\004\027\154\001\002\000" +
    "\004\061\uffdd\001\002\000\004\030\155\001\002\000\004" +
    "\032\156\001\002\000\020\017\uffc1\037\uffc1\040\uffc1\041" +
    "\uffc1\042\uffc1\043\uffc1\044\uffc1\001\002\000\004\051\160" +
    "\001\002\000\010\002\uffeb\047\uffeb\050\uffeb\001\002\000" +
    "\004\061\uffd8\001\002\000\004\061\uffdb\001\002\000\004" +
    "\032\254\001\002\000\004\032\250\001\002\000\004\045" +
    "\242\001\002\000\004\061\uffd9\001\002\000\004\054\152" +
    "\001\002\000\004\032\213\001\002\000\004\061\uffda\001" +
    "\002\000\004\061\uffdc\001\002\000\006\054\152\061\uffd4" +
    "\001\002\000\006\040\176\041\175\001\002\000\004\032" +
    "\207\001\002\000\004\032\203\001\002\000\006\054\152" +
    "\061\uffd6\001\002\000\004\061\uffd5\001\002\000\004\041" +
    "\175\001\002\000\004\061\uffd7\001\002\000\004\031\204" +
    "\001\002\000\004\062\205\001\002\000\004\055\206\001" +
    "\002\000\006\054\uffca\061\uffca\001\002\000\004\031\210" +
    "\001\002\000\004\062\211\001\002\000\004\055\212\001" +
    "\002\000\004\061\uffc9\001\002\000\004\031\214\001\002" +
    "\000\004\062\215\001\002\000\004\055\216\001\002\000" +
    "\004\045\uffc5\001\002\000\006\040\176\043\222\001\002" +
    "\000\004\054\152\001\002\000\004\054\152\001\002\000" +
    "\004\032\223\001\002\000\004\031\224\001\002\000\004" +
    "\062\225\001\002\000\004\055\226\001\002\000\004\054" +
    "\uffc7\001\002\000\004\043\222\001\002\000\004\054\152" +
    "\001\002\000\004\044\233\001\002\000\004\061\uffd3\001" +
    "\002\000\004\032\234\001\002\000\004\031\235\001\002" +
    "\000\004\062\236\001\002\000\004\055\237\001\002\000" +
    "\004\061\uffc6\001\002\000\004\044\233\001\002\000\004" +
    "\061\uffd2\001\002\000\004\032\244\001\002\000\004\061" +
    "\uffd1\001\002\000\004\031\245\001\002\000\004\062\246" +
    "\001\002\000\004\055\247\001\002\000\004\061\uffc4\001" +
    "\002\000\004\031\251\001\002\000\004\062\252\001\002" +
    "\000\004\055\253\001\002\000\006\054\uffcb\061\uffcb\001" +
    "\002\000\004\031\255\001\002\000\004\062\256\001\002" +
    "\000\004\055\257\001\002\000\004\054\uffc8\001\002\000" +
    "\004\032\261\001\002\000\004\031\262\001\002\000\014" +
    "\015\265\033\267\034\264\035\266\036\263\001\002\000" +
    "\004\053\uffcc\001\002\000\004\053\uffce\001\002\000\004" +
    "\053\uffd0\001\002\000\004\053\uffcd\001\002\000\004\053" +
    "\uffcf\001\002\000\004\053\271\001\002\000\004\057\uffde" +
    "\001\002\000\004\031\273\001\002\000\004\056\274\001" +
    "\002\000\004\052\044\001\002\000\004\052\044\001\002" +
    "\000\004\014\325\001\002\000\004\052\044\001\002\000" +
    "\004\052\044\001\002\000\004\016\302\001\002\000\004" +
    "\032\303\001\002\000\004\031\304\001\002\000\004\062" +
    "\305\001\002\000\004\053\306\001\002\000\004\052\uffe2" +
    "\001\002\000\004\017\320\001\002\000\004\052\044\001" +
    "\002\000\004\052\uffe1\001\002\000\004\052\044\001\002" +
    "\000\004\052\044\001\002\000\004\052\044\001\002\000" +
    "\004\057\316\001\002\000\004\051\317\001\002\000\010" +
    "\002\uffee\047\uffee\050\uffee\001\002\000\004\032\321\001" +
    "\002\000\004\031\322\001\002\000\004\062\323\001\002" +
    "\000\004\053\324\001\002\000\004\052\uffe0\001\002\000" +
    "\004\032\326\001\002\000\004\031\327\001\002\000\004" +
    "\062\330\001\002\000\004\053\331\001\002\000\006\052" +
    "\uffe3\057\uffe3\001\002\000\004\031\333\001\002\000\004" +
    "\056\334\001\002\000\004\052\044\001\002\000\004\057" +
    "\336\001\002\000\004\051\337\001\002\000\010\002\uffef" +
    "\047\uffef\050\uffef\001\002\000\004\031\341\001\002\000" +
    "\004\056\342\001\002\000\004\052\044\001\002\000\004" +
    "\052\044\001\002\000\004\052\044\001\002\000\004\057" +
    "\346\001\002\000\004\060\347\001\002\000\004\054\152" +
    "\001\002\000\004\061\351\001\002\000\004\051\352\001" +
    "\002\000\010\002\uffe9\047\uffe9\050\uffe9\001\002\000\004" +
    "\031\354\001\002\000\004\056\355\001\002\000\004\052" +
    "\044\001\002\000\004\052\044\001\002\000\004\057\360" +
    "\001\002\000\004\051\361\001\002\000\010\002\uffec\047" +
    "\uffec\050\uffec\001\002\000\004\002\001\001\002\000\006" +
    "\047\364\050\010\001\002\000\004\002\ufffe\001\002\000" +
    "\006\047\ufffd\050\ufffd\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\363\000\012\047\010\050\005\051\004\053\006\001" +
    "\001\000\004\046\362\001\001\000\002\001\001\000\002" +
    "\001\001\000\030\030\017\031\030\032\031\033\034\034" +
    "\036\035\020\036\021\037\024\040\025\041\027\042\015" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\021\044\054\042\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\020\045\054\046\001\001" +
    "\000\006\017\054\054\055\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\016\064\054\063\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\015\065\054\066\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\021\116\054\042\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\021\124\054\042\001\001" +
    "\000\006\011\126\054\125\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\021\141\054\042\001\001\000\006\011\142\054" +
    "\125\001\001\000\006\023\144\054\143\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\043" +
    "\150\044\152\055\147\001\001\000\022\002\164\005\166" +
    "\010\172\025\165\026\170\027\161\045\171\052\160\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\056" +
    "\242\001\001\000\002\001\001\000\004\055\216\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\055\173\001\001\000\006\006\177\007\176\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\055\200\001" +
    "\001\000\002\001\001\000\004\006\201\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\004\217\007\220\001\001\000\004\055\237\001\001\000" +
    "\004\055\226\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\227\001\001\000\004\055\230\001\001\000\004" +
    "\003\231\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\240\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\267\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\021\274\054\042\001\001\000\006\014\276" +
    "\054\275\001\001\000\002\001\001\000\006\013\277\054" +
    "\300\001\001\000\010\012\310\022\307\054\306\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\020\311\054\046\001\001\000\002\001" +
    "\001\000\006\017\312\054\055\001\001\000\006\016\313" +
    "\054\063\001\001\000\006\015\314\054\066\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\021\334\054\042" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\021\342" +
    "\054\042\001\001\000\006\011\343\054\125\001\001\000" +
    "\006\023\344\054\143\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\043\347\044\152\055\147\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\021\355\054\042\001" +
    "\001\000\006\014\356\054\275\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\050\364\053\006\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private ArrayList<WebSite> webSites = new ArrayList<>();
    private ArrayList<Page> pages = new ArrayList<>();
    private ArrayList<Component> components = new ArrayList<>();
    private LocalDate date = LocalDate.now();

    public void syntax_error(Symbol cur_token) {
            System.out.println("Simbolo con error:" + symbl_name_from_id(cur_token.sym));
            System.out.println("Linea " + cur_token.left);
            System.out.println("Columna " + cur_token.right);
            if (expected_token_ids().isEmpty()) {
                System.out.println("ya no se esperaba ningun simbolo");
            }
    }

    public ArrayList<WebSite> getWebs(){
        return this.webSites;
    }

    public ArrayList<Page> getPages(){
        return this.pages;
    }

    public ArrayList<Component> getComponents(){
        return this.components;
    }

    private String quitarCorchetes(String identificador){
        return identificador.replace("[", "").replace("]", "");
    }

    private String quitarEspacios(String space){
        return space.replace(" ", "");
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser$actions {
  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action_part00000000(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= onset EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // onset ::= actionSingle 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("onset",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // onset ::= actions 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("onset",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // actions ::= INITACCIONES reaction ENDACCIONES 
            {
              ClassPrincipal RESULT =null;
		int reactionleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int reactionright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		ClassPrincipal reaction = (ClassPrincipal)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		ClassPrincipal classPrincipal = new ClassPrincipal(webSites, pages, components); RESULT = classPrincipal;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("actions",37, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // reaction ::= reaction actionSingle 
            {
              ClassPrincipal RESULT =null;
		int actionSingleleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int actionSingleright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		ClassPrincipal actionSingle = (ClassPrincipal)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		ClassPrincipal classPrincipal = new ClassPrincipal(webSites, pages, components); RESULT = classPrincipal;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("reaction",36, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // reaction ::= 
            {
              ClassPrincipal RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("reaction",36, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // actionSingle ::= initAcction siteWeb 
            {
              ClassPrincipal RESULT =null;
		int siteWebleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int siteWebright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		WebSite siteWeb = (WebSite)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		ClassPrincipal classPrincipal = new ClassPrincipal();
            classPrincipal.setWebSites(webSites);
            ArrayList<WebSite> webSites;
            webSites = classPrincipal.getWebSites();
            RESULT = classPrincipal;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("actionSingle",38, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // actionSingle ::= initAcction page 
            {
              ClassPrincipal RESULT =null;
		int pageleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int pageright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Page page = (Page)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		ClassPrincipal classPrincipal = new ClassPrincipal();
            classPrincipal.setPages(pages); RESULT = classPrincipal;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("actionSingle",38, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // actionSingle ::= initAcction component 
            {
              ClassPrincipal RESULT =null;
		int componentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int componentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Component component = (Component)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		ClassPrincipal classPrincipal = new ClassPrincipal();
            classPrincipal.setComponents(components); RESULT = classPrincipal;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("actionSingle",38, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // siteWeb ::= addNewSite 
            {
              WebSite RESULT =null;
		int addNewSiteleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int addNewSiteright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		WebSite addNewSite = (WebSite)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		webSites.add(addNewSite);
                                RESULT = addNewSite;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("siteWeb",26, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // siteWeb ::= deleteSite 
            {
              WebSite RESULT =null;
		int deleteSiteleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int deleteSiteright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		WebSite deleteSite = (WebSite)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		webSites.add(deleteSite); RESULT = deleteSite;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("siteWeb",26, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // page ::= newPage 
            {
              Page RESULT =null;
		int newPageleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int newPageright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Page newPage = (Page)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		pages.add(newPage); RESULT = newPage;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("page",22, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // page ::= modifyPage 
            {
              Page RESULT =null;
		int modifyPageleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int modifyPageright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Page modifyPage = (Page)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		pages.add(modifyPage); RESULT = modifyPage;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("page",22, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // page ::= deletePage 
            {
              Page RESULT =null;
		int deletePageleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int deletePageright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Page deletePage = (Page)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		pages.add(deletePage); RESULT = deletePage;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("page",22, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // component ::= addComponent 
            {
              Component RESULT =null;
		int addComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int addComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Component addComponent = (Component)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		components.add(addComponent); RESULT = addComponent;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("component",29, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // component ::= modifyComponent 
            {
              Component RESULT =null;
		int modifyComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int modifyComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Component modifyComponent = (Component)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		components.add(modifyComponent); RESULT = modifyComponent;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("component",29, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // component ::= deleteComponent 
            {
              Component RESULT =null;
		int deleteComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int deleteComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Component deleteComponent = (Component)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		components.add(deleteComponent); RESULT = deleteComponent;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("component",29, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // addNewSite ::= NUEVO_SITIO_WEB COMILLAS MAYORQUE INITPARAMETROS id userCreator creationDate modificationDate modificationUser ENDPARAMETROS ENDACCION 
            {
              WebSite RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-6)).value;
		int userCreatorleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int userCreatorright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		String userCreator = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int creationDateleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int creationDateright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		String creationDate = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int modificationDateleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int modificationDateright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		String modificationDate = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int modificationUserleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int modificationUserright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String modificationUser = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		WebSite webSite = new WebSite(id.toString(), userCreator.toString(), creationDate.toString(), modificationDate.toString(), modificationUser.toString(), false);
            RESULT = webSite;
            
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("addNewSite",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-10)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // deleteSite ::= BORRAR_SITIO_WEB COMILLAS MAYORQUE INITPARAMETROS id ENDPARAMETROS ENDACCION 
            {
              WebSite RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		WebSite webSite = new WebSite(id, true); RESULT = webSite;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("deleteSite",28, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // newPage ::= NUEVA_PAGINA COMILLAS MAYORQUE INITPARAMETROS id title site prePrincipal userCreator creationDate modificationDate modificationUser ENDPARAMETROS ENDACCION 
            {
              Page RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-9)).value;
		int titleleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-8)).left;
		int titleright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-8)).right;
		String title = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-8)).value;
		int siteleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int siteright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		String site = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int prePrincipalleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).left;
		int prePrincipalright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).right;
		String prePrincipal = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-6)).value;
		int userCreatorleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int userCreatorright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		String userCreator = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int creationDateleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int creationDateright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		String creationDate = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int modificationDateleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int modificationDateright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		String modificationDate = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int modificationUserleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int modificationUserright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String modificationUser = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		Page page = new Page(id, title, site, prePrincipal, userCreator, creationDate, modificationDate, modificationUser, 1); RESULT = page;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("newPage",23, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-13)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // deletePage ::= BORRAR_PAGINA COMILLAS MAYORQUE INITPARAMETROS id ENDPARAMETROS ENDACCION 
            {
              Page RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		Page page = new Page(id, 3); RESULT = page;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("deletePage",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // modifyPage ::= MODIFICAR_PAGINA COMILLAS MAYORQUE INITPARAMETROS id title ENDPARAMETROS ENDACCION 
            {
              Page RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int titleleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int titleright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String title = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		Page page = new Page(id, title, 2); RESULT = page;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("modifyPage",24, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // addComponent ::= AGREGAR_COMPONENTE COMILLAS MAYORQUE INITPARAMETROS id pageComponent classComponent ENDPARAMETROS INITATRIBUTOS atribut ENDATRIBUTOS ENDACCION 
            {
              Component RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int pageComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).left;
		int pageComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).right;
		String pageComponent = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-6)).value;
		int classComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int classComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		String classComponent = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int atributleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int atributright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Component atribut = (Component)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		
                    atribut.setIdComponent(id);
                    atribut.setPage(pageComponent);
                    atribut.setClassComponent(classComponent);
                    RESULT = atribut;
                 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("addComponent",30, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // deleteComponent ::= BORRAR_COMPONENTE COMILLAS MAYORQUE INITPARAMETROS id pageComponent ENDPARAMETROS ENDACCION 
            {
              Component RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int pageComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int pageComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String pageComponent = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		System.out.println("Se hizo delete de componente");Component component = new Component(id, pageComponent, " ", 4); RESULT = component;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("deleteComponent",32, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // modifyComponent ::= MODIFICAR_COMPONENTE COMILLAS MAYORQUE INITPARAMETROS id pageComponent classComponent ENDPARAMETROS INITATRIBUTOS atribut ENDATRIBUTOS ENDACCION 
            {
              Component RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int pageComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).left;
		int pageComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).right;
		String pageComponent = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-6)).value;
		int classComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int classComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		String classComponent = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int atributleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int atributright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Component atribut = (Component)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		
                    atribut.setIdComponent(id);
                    atribut.setPage(pageComponent);
                    atribut.setClassComponent(classComponent);
                    atribut.setFlag(7);
                    RESULT = atribut;
                
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("modifyComponent",31, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // id ::= initParametro ID COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(id.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("id",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // userCreator ::= initParametro USUARIO_CREACION COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int userCreatorleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int userCreatorright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object userCreator = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		
            String conditional = quitarCorchetes(quitarEspacios(userCreator.toString()));
            if(conditional.equals("") ){
                userCreator = "UsuarioDefault";
            }RESULT = quitarCorchetes(userCreator.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("userCreator",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // creationDate ::= initParametro FECHA_CREACION COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int creationDateleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int creationDateright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object creationDate = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		
                String conditional = quitarCorchetes(quitarEspacios(creationDate.toString()));
                if(conditional.equals("")){
                    creationDate = ""+date;
                }
                RESULT = creationDate.toString();
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("creationDate",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // modificationDate ::= initParametro FECHA_MODIFICACION COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int modificationDateleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int modificationDateright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object modificationDate = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		
                String conditional = quitarCorchetes(quitarEspacios(modificationDate.toString()));
                    if(conditional.equals("")){
                        modificationDate = ""+date;
                    }
                RESULT = quitarCorchetes(modificationDate.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("modificationDate",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // modificationUser ::= initParametro USUARIO_MODIFICACION COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int modificationUserleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int modificationUserright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object modificationUser = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		
                String conditional = quitarCorchetes(quitarEspacios(modificationUser.toString()));
                if(conditional.equals("")){
                modificationUser = "UsuarioDefault";
                }
                RESULT = quitarCorchetes(modificationUser.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("modificationUser",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // title ::= initParametro TITULO COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int titleleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int titleright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object title = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(title.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("title",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // site ::= initParametro SITIO COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int siteleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int siteright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object site = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(site.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("site",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // prePrincipal ::= principal 
            {
              String RESULT =null;
		int principalleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int principalright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String principal = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = principal;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("prePrincipal",16, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // principal ::= initParametro PADRE COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int principalleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int principalright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object principal = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(principal.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("principal",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // pageComponent ::= initParametro PAGINA COMILLAS MAYORQUE IDENTIFICADOR ENDPARAMETRO 
            {
              String RESULT =null;
		int pageComponentleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int pageComponentright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object pageComponent = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(pageComponent.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("pageComponent",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // classComponent ::= initParametro CLASE COMILLAS MAYORQUE atributClass ENDPARAMETRO 
            {
              String RESULT =null;
		int atributClassleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int atributClassright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String atributClass = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = atributClass;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("classComponent",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // atribut ::= atributExtend 
            {
              Component RESULT =null;
		int atributsleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int atributsright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Component atributs = (Component)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = atributs;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atribut",33, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // atributExtend ::= initAttribut attributsDeclared 
            {
              Component RESULT =null;
		int attrDclleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int attrDclright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Component attrDcl = (Component)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = attrDcl;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributExtend",34, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // attributsDeclared ::= declaredTextAttribut 
            {
              Component RESULT =null;
		int decltxtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int decltxtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		TextComponent decltxt = (TextComponent)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = decltxt;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("attributsDeclared",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // attributsDeclared ::= declaredImageAttribut 
            {
              Component RESULT =null;
		int declImgleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int declImgright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		ImageComponent declImg = (ImageComponent)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = declImg;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("attributsDeclared",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // attributsDeclared ::= declaredVideoAttribut 
            {
              Component RESULT =null;
		int declVideleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int declVideright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		VideoComponent declVide = (VideoComponent)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = declVide;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("attributsDeclared",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // attributsDeclared ::= declaredMenuAttribut 
            {
              Component RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("attributsDeclared",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // declaredTextAttribut ::= textAttribut initAttribut lineUpAttribut initAttribut colorAttribut 
            {
              TextComponent RESULT =null;
		int txtAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int txtAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		String txtAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int lineAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int lineAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String lineAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int colorAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int colorAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String colorAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		TextComponent textComponent = new TextComponent(txtAt, lineAt, colorAt, 1);
                    RESULT = textComponent;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaredTextAttribut",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // declaredTextAttribut ::= textAttribut initAttribut lineUpAttribut 
            {
              TextComponent RESULT =null;
		int txtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int txtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String txt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int lineAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lineAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String lineAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		TextComponent textComponent = new TextComponent(txt, lineAt, 1); RESULT = textComponent; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaredTextAttribut",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // declaredTextAttribut ::= textAttribut initAttribut colorAttribut 
            {
              TextComponent RESULT =null;
		int txtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int txtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String txt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int colorleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		TextComponent textComponent = new TextComponent(txt, 1, color); RESULT = textComponent;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaredTextAttribut",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // declaredTextAttribut ::= textAttribut 
            {
              TextComponent RESULT =null;
		int txtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int txtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String txt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		TextComponent textComponent = new TextComponent(txt, 1); RESULT = textComponent;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaredTextAttribut",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // declaredImageAttribut ::= originAttribut initAttribut lineUpAttribut initAttribut heightAttribut initAttribut wideAttribut 
            {
              ImageComponent RESULT =null;
		int originAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).left;
		int originAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).right;
		String originAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-6)).value;
		int lineAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int lineAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		String lineAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int heightAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int heightAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String heightAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int wideAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int wideAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String wideAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		ImageComponent imageComponent = new ImageComponent(originAt, lineAt, heightAt, wideAt, 2);
                        RESULT = imageComponent;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaredImageAttribut",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // declaredVideoAttribut ::= originAttribut initAttribut heightAttribut initAttribut wideAttribut 
            {
              VideoComponent RESULT =null;
		int originAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int originAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		String originAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int heightAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int heightAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String heightAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int wideAtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int wideAtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String wideAt = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		VideoComponent videoComponent = new VideoComponent(originAt, heightAt, wideAt, 3);
                        RESULT = videoComponent;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaredVideoAttribut",19, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // declaredMenuAttribut ::= principalAttribut labelAttribut 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaredMenuAttribut",40, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // atributClass ::= TITULOCORCHETES 
            {
              String RESULT =null;
		int tituloleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int tituloright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object titulo = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = quitarCorchetes(titulo.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // atributClass ::= PARRAFO 
            {
              String RESULT =null;
		int parrafoleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int parraforight = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object parrafo = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = quitarCorchetes(parrafo.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // atributClass ::= IMAGEN 
            {
              String RESULT =null;
		int imagenleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int imagenright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object imagen = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = quitarCorchetes(imagen.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // atributClass ::= VIDEO 
            {
              String RESULT =null;
		int videoleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int videoright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object video = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = quitarCorchetes(video.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // atributClass ::= MENU 
            {
              String RESULT =null;
		int menuleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int menuright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object menu = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		RESULT = quitarCorchetes(menu.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("atributClass",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // textAttribut ::= TEXTO COMILLAS MAYORQUE IDENTIFICADOR ENDATRIBUT 
            {
              String RESULT =null;
		int textAttributleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int textAttributright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object textAttribut = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(textAttribut.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("textAttribut",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // lineUpAttribut ::= ALINEACION COMILLAS MAYORQUE IDENTIFICADOR ENDATRIBUT 
            {
              String RESULT =null;
		int lineUpAttributleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int lineUpAttributright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object lineUpAttribut = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(lineUpAttribut.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("lineUpAttribut",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // colorAttribut ::= COLOR COMILLAS MAYORQUE IDENTIFICADOR ENDATRIBUT 
            {
              String RESULT =null;
		int hexadecimalleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int hexadecimalright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object hexadecimal = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(hexadecimal.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("colorAttribut",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // originAttribut ::= ORIGEN COMILLAS MAYORQUE IDENTIFICADOR ENDATRIBUT 
            {
              String RESULT =null;
		int originAttributleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int originAttributright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object originAttribut = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(originAttribut.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("originAttribut",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // heightAttribut ::= ALTURA COMILLAS MAYORQUE IDENTIFICADOR ENDATRIBUT 
            {
              String RESULT =null;
		int heightAttributleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int heightAttributright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object heightAttribut = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(heightAttribut.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("heightAttribut",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // wideAttribut ::= ANCHO COMILLAS MAYORQUE IDENTIFICADOR ENDATRIBUT 
            {
              String RESULT =null;
		int wideAttributleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int wideAttributright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object wideAttribut = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(wideAttribut.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("wideAttribut",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // principalAttribut ::= PADRE COMILLAS MAYORQUE IDENTIFICADOR ENDATRIBUT 
            {
              String RESULT =null;
		int principalAttributleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int principalAttributright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object principalAttribut = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = quitarCorchetes(principalAttribut.toString());
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("principalAttribut",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // labelAttribut ::= ETIQUETAS COMILLAS MAYORQUE IDENTIFICADOR ENDATRIBUT 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("labelAttribut",44, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // initAcction ::= INITACCION NOMBRE IGUAL COMILLAS 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initAcction",41, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // initParametro ::= INITPARAMETRO NOMBRE IGUAL COMILLAS 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initParametro",42, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // initAttribut ::= INITATRIBUT NOMBRE IGUAL COMILLAS 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initAttribut",43, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
              return CUP$Parser$do_action_part00000000(
                               CUP$Parser$act_num,
                               CUP$Parser$parser,
                               CUP$Parser$stack,
                               CUP$Parser$top);
    }
}

}
